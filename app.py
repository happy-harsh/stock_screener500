import yfinance as yf
from flask import Flask
from flask_socketio import SocketIO
from flask_cors import CORS
import threading
import time
import pandas as pd
import concurrent.futures
from datetime import datetime, timedelta
import warnings
from flask import jsonify, request

# warnings.filterwarnings("ignore", message="The 'unit' keyword in TimedeltaIndex construction is deprecated and will be removed in a future version. Use pd.to_timedelta instead.", category=FutureWarning, module="yfinance.utils")
warnings.filterwarnings("ignore", category=FutureWarning, module="yfinance.utils")


app = Flask(__name__)
CORS(app, resources={r"/": {"origins": ""}})
socketio = SocketIO(app, cors_allowed_origins="*")




def fetch_stock_info(symbol):
    try:
        stock = yf.Ticker(symbol)
        stock_info = stock.info


        # Last 3 Days Volume Average

        # Set the end date as today
        end_date = datetime.today().strftime('%Y-%m-%d')

        # Calculate the start date by subtracting 3 days from today
        start_date = (datetime.today() - timedelta(days=3)).strftime('%Y-%m-%d')

        # Fetch historical data
        historical_data = yf.download(symbol, start=start_date, end=end_date,progress=False)

        # Extract the closing volumes for the last 3 days
        closing_volumes_last_3_days = historical_data['Volume'].tail(3).mean()




        # 30 days Average Volume
        stock_data = yf.download(symbol, period="1mo")

        # Extract the "Volume" column
        volume_data = stock_data['Volume'].mean()

        # current Price
        # KIRLPNU.NS no cmp available
        current_price = stock_info.get('currentPrice')

        return {
            'symbol': symbol,
            'price': current_price,
            # 'ask': stock_info.get('ask'),
            # 'open': stock_info.get('open'),
            'previousClose': stock_info.get('previousClose'),
            # 'Low': stock_info.get('dayLow'),
            # 'High': stock_info.get('dayHigh'),
            'thirtyDayAvgVolume':volume_data,
            'volume': stock_info.get('volume'),
            # 'last_3days_average_volume':closing_volumes_last_3_days,
            # 'marketCap': stock_info.get('marketCap'),
            # 'avgThreeMonVolume': stock_info.get('averageVolume'),
            # 'fiftyTwoWeekLow': stock_info.get('fiftyTwoWeekLow'),
            # 'fiftyTwoWeekHigh': stock_info.get('fiftyTwoWeekHigh'),
            # 'tPeRatio': stock_info.get('trailingPE'),
            # 'tEPS': stock_info.get('trailingEps')
        }
    except Exception as e:
        print(f"Error fetching  {symbol}: {e}")
        return None


@app.route('/')
def hello_world():
    return 'Api is running!'


def get_all_stock_data(symbols):
    i = 1
    while True:
        results = []
        start_time = time.time()
        for symbol in symbols:
            stock_info = fetch_stock_info(symbol)
            # time.sleep(2) 
            if stock_info:
                results.append(stock_info)

        end_time = time.time()
        print('scanning for',i,'time')
        i=i+1
        print("Execution time:", end_time - start_time, "seconds")  
        time.sleep(8) 
        socketio.emit('stock_data', results)
        # print(results)
    

@socketio.on('connect')
def handle_connect():
    print('Client connected')
    symbols = [
           "360ONE.NS",
   "AARTIDRUGS.NS",
   "AARTIPHARM.NS",
   "AAVAS.NS",
   "ACCELYA.NS",
   "ACE.NS",
   "ACI.NS",
   "ACLGATI.NS",
   "ADVENZYMES.NS",
   "AEGISCHEM.NS",
   "AETHER.NS",
   "AFFLE.NS",
   "AGI.NS",
   "AHLUCONT.NS",
   "ALKYLAMINE.NS",
   "ALLCARGO.NS",
   "ALOKINDS.NS",
   "AMBER.NS",
   "AMIORG.NS",
   "ANANDRATHI.NS",
   "ANANTRAJ.NS",
   "ANGELONE.NS",
   "ANURAS.NS",
   "APARINDS.NS",
   "APCOTEXIND.NS",
   "APLLTD.NS",
   "APOLLOPIPE.NS",
   "APTUS.NS",
   "ARE&M.NS",
   "ARVIND.NS",
   "ARVINDFASN.NS",
   "ASAHIINDIA.NS",
   "ASHOKA.NS",
   "ASTEC.NS",
   "ASTERDM.NS",
   "ASTRAMICRO.NS",
   "ASTRAZEN.NS",
   "AUTOAXLES.NS",
   "AVALON.NS",
   "AVANTIFEED.NS",
   "BAJAJCON.NS",
   "BAJAJHIND.NS",
   "BALAMINES.NS",
   "BALMLAWRIE.NS",
   "BALRAMCHIN.NS",
   "BARBEQUE.NS",
   "BBTC.NS",
   "BCG.NS",
   "BECTORFOOD.NS",
   "BEML.NS",
   "BEPL.NS",
   "BIKAJI.NS",
   "BIRLACORPN.NS",
   "BLS.NS",
   "BLUESTARCO.NS",
   "BOMDYEING.NS",
   "BORORENEW.NS",
   "BRIGADE.NS",
   "BSE.NS",
   "BSOFT.NS",
   "CAMLINFINE.NS",
   "CAMPUS.NS",
   "CAMS.NS",
   "CANFINHOME.NS",
   "CAPLIPOINT.NS",
   "CARERATING.NS",
   "CARTRADE.NS",
   "CARYSIL.NS",
   "CASTROLIND.NS",
   "CCL.NS",
   "CDSL.NS",
   "CEATLTD.NS",
   "CENTRALBK.NS",
   "CENTURYPLY.NS",
   "CENTURYTEX.NS",
   "CERA.NS",
   "CESC.NS",
   "CGCL.NS",
   "CHALET.NS",
   "CHAMBLFERT.NS",
   "CHEMPLASTS.NS",
   "CHENNPETRO.NS",
   "CHOICEIN.NS",
   "CHOLAHLDNG.NS",
   "CIEINDIA.NS",
   "CIGNITITEC.NS",
   "CLEAN.NS",
   "CMSINFO.NS",
   "COCHINSHIP.NS",
   "CONCORDBIO.NS",
   "CONFIPET.NS",
   "COSMOFIRST.NS",
   "CRAFTSMAN.NS",
   "CREDITACC.NS",
   "CSBBANK.NS",
   "CUB.NS",
   "CYIENT.NS",
   "DALMIASUG.NS",
   "DATAMATICS.NS",
   "DATAPATTNS.NS",
   "DBCORP.NS",
   "DBL.NS",
   "DBREALTY.NS",
   "DCAL.NS",
   "DCBBANK.NS",
   "DCMSHRIRAM.NS",
   "DCXINDIA.NS",
   "DEEPAKFERT.NS",
   "DELTACORP.NS",
   "DEN.NS",
   "DHANI.NS",
   "DISHTV.NS",
   "DIVGIITTS.NS",
   "DODLA.NS",
   "DOLLAR.NS",
   "DREAMFOLKS.NS",
   "DWARKESH.NS",
   "EASEMYTRIP.NS",
   "ECLERX.NS",
   "EDELWEISS.NS",
   "EIDPARRY.NS",
   "EIHOTEL.NS",
   "ELECON.NS",
   "ELECTCAST.NS",
   "ELGIEQUIP.NS",
   "EMIL.NS",
   "EMUDHRA.NS",
   "ENGINERSIN.NS",
   "EPIGRAL.NS",
   "EPL.NS",
   "EQUITASBNK.NS",
   "ERIS.NS",
   "ESABINDIA.NS",
   "ETHOSLTD.NS",
   "EVEREADY.NS",
   "EXIDEIND.NS",
   "FCL.NS",
   "FDC.NS",
   "FIEMIND.NS",
   "FINCABLES.NS",
   "FINEORG.NS",
   "FINOPB.NS",
   "FINPIPE.NS",
   "FIVESTAR.NS",
   "FSL.NS",
   "FUSION.NS",
   "GABRIEL.NS",
   "GAEL.NS",
   "GALAXYSURF.NS",
   "GANESHHOUC.NS",
   "GARFIBRES.NS",
   "GATEWAY.NS",
   "GESHIP.NS",
   "GET&D.NS",
   "GHCL.NS",
   "GILLETTE.NS",
   "GLENMARK.NS",
   "GLOBUSSPR.NS",
   "GLS.NS",
   "GMDCLTD.NS",
   "GMMPFAUDLR.NS",
   "GNFC.NS",
   "GOCOLORS.NS",
   "GODFRYPHLP.NS",
   "GODREJAGRO.NS",
   "GOKEX.NS",
   "GPIL.NS",
   "GPPL.NS",
   "GRANULES.NS",
   "GRAPHITE.NS",
   "GRAVITA.NS",
   "GREAVESCOT.NS",
   "GREENLAM.NS",
   "GREENPANEL.NS",
   "GREENPLY.NS",
   "GRINFRA.NS",
   "GRSE.NS",
   "GSFC.NS",
   "GSPL.NS",
   "GUFICBIO.NS",
   "GUJALKALI.NS",
   "HAPPSTMNDS.NS",
   "HARSHA.NS",
   "HATHWAY.NS",
   "HBLPOWER.NS",
   "HCC.NS",
   "HCG.NS",
   "HEG.NS",
   "HEIDELBERG.NS",
   "HEMIPROP.NS",
   "HERITGFOOD.NS",
   "HFCL.NS",
   "HGINFRA.NS",
   "HGS.NS",
   "HIKAL.NS",
   "HIL.NS",
   "HINDCOPPER.NS",
   "HINDOILEXP.NS",
   "HINDWAREAP.NS",
   "HLEGLAS.NS",
   "HNDFDS.NS",
   "HOMEFIRST.NS",
   "HSCL.NS",
   "HUDCO.NS",
   "IBREALEST.NS",
   "IBULHSGFIN.NS",
   "ICIL.NS",
   "IDBI.NS",
   "IDFC.NS",
   "IEX.NS",
   "IFBIND.NS",
   "IFCI.NS",
   "IIFL.NS",
   "IKIO.NS",
   "IMFA.NS",
   "INDIACEM.NS",
   "INDIAGLYCO.NS",
   "INDIAMART.NS",
   "INDIGOPNTS.NS",
   "INDOCO.NS",
   "INFIBEAM.NS",
   "INGERRAND.NS",
   "INOXWIND.NS",
   "INTELLECT.NS",
   "IOB.NS",
   "IOLCP.NS",
   "IONEXCHANG.NS",
   "IRB.NS",
   "IRCON.NS",
   "ISGEC.NS",
   "ITDCEM.NS",
   "ITI.NS",
   "J&KBANK.NS",
   "JAICORPLTD.NS",
   "JAMNAAUTO.NS",
   "JBCHEPHARM.NS",
   "JBMA.NS",
   "JCHAC.NS",
   "JINDALPOLY.NS",
   "JINDALSAW.NS",
   "JINDWORLD.NS",
   "JISLJALEQS.NS",
   "JKIL.NS",
   "JKLAKSHMI.NS",
   "JKPAPER.NS",
   "JKTYRE.NS",
   "JMFINANCIL.NS",
   "JPASSOCIAT.NS",
   "JPPOWER.NS",
"JTEKTINDIA.NS",
   "JTLIND.NS",
   "JUBLINGREA.NS",
   "JUBLPHARMA.NS",
   "JUSTDIAL.NS",
   "JWL.NS",
   "JYOTHYLAB.NS",
   "KALYANKJIL.NS",
   "KARURVYSYA.NS",
   "KAYNES.NS",
   "KEC.NS",
   "KEI.NS",
   "KFINTECH.NS",
   "KIMS.NS",
   "KIRIINDUS.NS",
   "KIRLOSBROS.NS",
   "KIRLOSENG.NS",
   "KIRLPNU.NS",
   "KKCL.NS",
   "KNRCON.NS",
   "KOLTEPATIL.NS",
   "KPIL.NS",
   "KRBL.NS",
   "KRSNAA.NS",
   "KSB.NS",
   "KSCL.NS",
   "KTKBANK.NS",
   "LANDMARK.NS",
   "LAOPALA.NS",
   "LATENTVIEW.NS",
   "LAXMIMACH.NS",
   "LEMONTREE.NS",
   "LGBBROSLTD.NS",
   "LLOYDSENGG.NS",
   "LTFOODS.NS",
   "LUXIND.NS",
   "LXCHEM.NS",
   "MAHLIFE.NS",
   "MAHLOG.NS",
   "MAHSEAMLES.NS",
   "MAITHANALL.NS",
   "MANAPPURAM.NS",
   "MANINFRA.NS",
   "MAPMYINDIA.NS",
   "MARKSANS.NS",
   "MASFIN.NS",
   "MASTEK.NS",
   "MAYURUNIQ.NS",
   "MCX.NS",
   "MEDANTA.NS",
   "MEDPLUS.NS",
   "METROPOLIS.NS",
   "MGL.NS",
   "MHRIL.NS",
   "MIDHANI.NS",
   "MINDACORP.NS",
   "MMTC.NS",
   "MOIL.NS",
   "MOL.NS",
   "MOLDTKPAC.NS",
   "MOTILALOFS.NS",
   "MRPL.NS",
   "MSTCLTD.NS",
   "MTARTECH.NS",
   "NAM-INDIA.NS",
   "NATCOPHARM.NS",
   "NATIONALUM.NS",
   "NAVA.NS",
   "NAVNETEDUL.NS",
   "NAZARA.NS",
   "NBCC.NS",
   "NCC.NS",
   "NEOGEN.NS",
   "NESCO.NS",
   "NETWORK18.NS",
   "NEULANDLAB.NS",
   "NEWGEN.NS",
   "NFL.NS",
   "NH.NS",
   "NLCINDIA.NS",
   "NOCIL.NS",
   "NRBBEARING.NS",
   "NSLNISP.NS",
   "NUVOCO.NS",
   "OLECTRA.NS",
   "OPTIEMUS.NS",
   "ORIENTCEM.NS",
   "ORIENTELEC.NS",
   "PAISALO.NS",
   "PARADEEP.NS",
   "PARAS.NS",
   "PCBL.NS",
   "PDSL.NS",
   "PGEL.NS",
   "PGHL.NS",
   "PNBHOUSING.NS",
   "PNCINFRA.NS",
   "POLYMED.NS",
   "POLYPLEX.NS",
   "POWERINDIA.NS",
   "POWERMECH.NS",
   "PPLPHARMA.NS",
   "PRAJIND.NS",
   "PRICOLLTD.NS",
   "PRINCEPIPE.NS",
   "PRIVISCL.NS",
   "PRSMJOHNSN.NS",
   "PRUDENT.NS",
   "PSPPROJECT.NS",
   "PTC.NS",
   "PTCIL.NS",
   "PVRINOX.NS",
   "QUESS.NS",
   "RADICO.NS",
   "RAILTEL.NS",
   "RAIN.NS",
   "RAINBOW.NS",
   "RAJRATAN.NS",
   "RALLIS.NS",
   "RAMKY.NS",
   "RATEGAIN.NS",
   "RATNAMANI.NS",
   "RAYMOND.NS",
   "RBA.NS",
   "RBLBANK.NS",
   "RCF.NS",
   "REDINGTON.NS",
   "RELIGARE.NS",
   "RELINFRA.NS",
   "RENUKA.NS",
   "RESPONIND.NS",
   "RHIM.NS",
   "RITES.NS",
   "RKFORGE.NS",
   "ROLEXRINGS.NS",
   "ROSSARI.NS",
   "ROUTE.NS",
   "RPOWER.NS",
   "RTNINDIA.NS",
   "RTNPOWER.NS",
   "RUPA.NS",
   "SAFARI.NS",
   "SAKSOFT.NS",
   "SANOFI.NS",
   "SANSERA.NS",
   "SAPPHIRE.NS",
   "SARDAEN.NS",
   "SAREGAMA.NS",
   "SBCL.NS",
   "SBFC.NS",
   "SCHNEIDER.NS",
   "SCI.NS",
   "SEQUENT.NS",
   "SFL.NS",
   "SHANTIGEAR.NS",
   "SHARDACROP.NS",
   "SHAREINDIA.NS",
   "SHILPAMED.NS",
   "SHOPERSTOP.NS",
   "SHYAMMETL.NS",
   "SIS.NS",
   "SIYSIL.NS",
   "SJVN.NS",
   "SOBHA.NS",
   "SOMANYCERA.NS",
   "SONATSOFTW.NS",
   "SOUTHBANK.NS",
   "SPANDANA.NS",
   "SPARC.NS",
   "SPLPETRO.NS",
   "SSWL.NS",
   "STAR.NS",
   "STARCEMENT.NS",
   "STLTECH.NS",
   "STYLAMIND.NS",
   "STYRENIX.NS",
   "SUBEXLTD.NS",
   "SUDARSCHEM.NS",
   "SULA.NS",
   "SUNFLAG.NS",
   "SUNTECK.NS",
   "SUPRAJIT.NS",
   "SUPRIYA.NS",
   "SURYAROSNI.NS",
   "SUVENPHAR.NS",
   "SUZLON.NS",
   "SWANENERGY.NS",
   "SWSOLAR.NS",
   "SYMPHONY.NS",
   "SYRMA.NS",
   "TANLA.NS",
   "TARSONS.NS",
   "TATAINVEST.NS",
   "TATAMETALI.NS",
   "TATVA.NS",
   "TCI.NS",
   "TCIEXP.NS",
   "TCNSBRANDS.NS",
   "TDPOWERSYS.NS",
   "TEAMLEASE.NS",
   "TECHNOE.NS",
   "TEGA.NS",
   "TEJASNET.NS",
   "THOMASCOOK.NS",
   "THYROCARE.NS",
   "TI.NS",
   "TIDEWATER.NS",
   "TIIL.NS",
   "TIMETECHNO.NS",
   "TIPSINDLTD.NS",
   "TIRUMALCHM.NS",
   "TITAGARH.NS",
   "TMB.NS",
   "TRITURBINE.NS",
   "TRIVENI.NS",
   "TTKPRESTIG.NS",
   "TTML.NS",
   "TV18BRDCST.NS",
   "TVSHLTD.NS",
   "TVSSCS.NS",
   "UCOBANK.NS",
   "UFLEX.NS",
   "UJJIVAN.NS",
   "UJJIVANSFB.NS",
   "UNICHEMLAB.NS",
   "UNIPARTS.NS",
   "USHAMART.NS",
   "UTIAMC.NS",
   "VAIBHAVGBL.NS",
   "VARROC.NS",
   "VENKEYS.NS",
   "VESUVIUS.NS",
   "VGUARD.NS",
   "VIJAYA.NS",
   "VIPIND.NS",
   "VMART.NS",
   "VOLTAMP.NS",
   "VRLLOG.NS",
   "VSTTILLERS.NS",
   "VTL.NS",
   "WABAG.NS",
   "WELCORP.NS",
   "WELENT.NS",
   "WELSPUNLIV.NS",
   "WESTLIFE.NS",
   "WOCKPHARMA.NS",
   "WONDERLA.NS",
   "WSTCSTPAPR.NS",
   "ZENSARTECH.NS",
   "ZENTEC.NS",
   "ZYDUSWELL.NS"
   
]
    threading.Thread(target=get_all_stock_data, args=(symbols,)).start()

if __name__ == "__main__":
    socketio.run(app)






# from flask import Flask
# app = Flask(__name__)

# @app.route('/')
# def hello_world():
#     return 'Hello, World!'





